// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  username     String   @unique @db.VarChar(64)
  passwordHash String
  avatarUrl    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Group   Group[]
  Member  Member[]
  Message Message[]
}

model Group {
  id          String @id @default(cuid())
  name        String @unique @db.VarChar(64)
  description String @default("") @db.Text()

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Member  Member[]
  Message Message[]
  Role    Role[]
}

model Member {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Role      Role[]
}

model Role {
  id       String  @id @default(cuid())
  member   Member  @relation(fields: [memberId], references: [id])
  memberId String
  Group    Group?  @relation(fields: [groupId], references: [id])
  groupId  String?
}

model Message {
  id        String   @id @default(cuid())
  text      String   @db.Text()
  author    User     @relation(fields: [userId], references: [id])
  group     Group    @relation(fields: [groupId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  groupId String
  userId  String
}
