// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  username     String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Group        Group[]  @relation("createdBy")

  // TODO: Fix the one-to-many self realtionship bug when trying to add a friends field 
  // friends  User[]   @relation("Friendship")
  // User     User?    @relation("Friendship", fields: [friendId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  // friendId String[] @db.ObjectId
  Message Message[]
}

model Group {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String    @default("")
  channels    Channel[]
  // Owner
  createdBy   User      @relation(fields: [userId], references: [id], name: "createdBy")
  userId      String    @db.ObjectId
}

model Channel {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String    @default("")
  messages    Message[]
  Group       Group?    @relation(fields: [groupId], references: [id])
  groupId     String?   @db.ObjectId
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String   @db.String
  sentBy    User    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Channel  Channel? @relation(fields: [channelId], references: [id])
  channelId String?  @db.ObjectId
  userId    String   @db.ObjectId
}
